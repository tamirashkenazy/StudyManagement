{"ast":null,"code":"import React from 'react';\nexport const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\nexport const onlyEnglishAndHebrew = RegExp(/^[A-Za-z\\u0590-\\u05fe]+$/i);\nexport const errors_messages = {\n  id_number: 'הכנס 9 מספרים של ת.ז',\n  tel_number: 'מספר טלפון מורכב מ10 תווים',\n  password: 'סיסמה לפחות 4 תווים',\n  year: 'בחר שנת לימודים',\n  email: 'אנא הכנס כתובת אימייל',\n  gender: 'בחר מין',\n  first_name: 'הכנס שם פרטי תקין',\n  last_name: 'הכנס שם משפחה תקין' // role : 'בחר האם הינך מורה או תלמיד או שניהם'\n\n};\nexport function validateForm(errors) {\n  let valid = true;\n  Object.values(errors).forEach(val => // if we have an error string set valid to false, will be true if val is not null\n  val && (valid = false));\n  return valid;\n}\nexport function check_and_assign_errors(name, value, temp_errors) {\n  switch (name) {\n    case 'email':\n      !validEmailRegex.test(value) ? temp_errors.email = errors_messages.email : temp_errors.email = null;\n      break;\n\n    case 'id_number':\n      value.length != 9 || !onlyNumbers.test(value) ? temp_errors.id_number = errors_messages.id_number : temp_errors.id_number = null;\n      break;\n\n    case 'password':\n      value.length < 4 ? temp_errors.password = errors_messages.password : temp_errors.password = null;\n      break;\n\n    case 'year':\n      !value ? temp_errors.year = errors_messages.year : temp_errors.year = null;\n      break;\n\n    case 'tel_number':\n      value.length != 10 || !onlyNumbers.test(value) ? temp_errors.tel_number = errors_messages.tel_number : temp_errors.tel_number = null;\n      break;\n\n    case 'gender':\n      value != 'male' && value != 'female' ? temp_errors.gender = errors_messages.gender : temp_errors.gender = null;\n      break;\n\n    case 'first_name':\n      value.length < 2 || !onlyEnglishAndHebrew.test(value) ? temp_errors.first_name = errors_messages.first_name : temp_errors.first_name = null;\n      break;\n\n    case 'last_name':\n      value.length < 2 || !onlyEnglishAndHebrew.test(value) ? temp_errors.last_name = errors_messages.last_name : temp_errors.last_name = null;\n      break;\n\n    default:\n      break;\n  }\n\n  return temp_errors;\n}","map":{"version":3,"sources":["D:/Tamir/Uni/3rd year/Project/StudyManagementProject/study-management-app/client/src/components/signup/validationFields.js"],"names":["React","validEmailRegex","RegExp","onlyNumbers","onlyEnglishAndHebrew","errors_messages","id_number","tel_number","password","year","email","gender","first_name","last_name","validateForm","errors","valid","Object","values","forEach","val","check_and_assign_errors","name","value","temp_errors","test","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\r\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\r\nexport const onlyEnglishAndHebrew = RegExp(/^[A-Za-z\\u0590-\\u05fe]+$/i)\r\nexport const errors_messages = {\r\n    id_number: 'הכנס 9 מספרים של ת.ז',\r\n    tel_number:  'מספר טלפון מורכב מ10 תווים',\r\n    password: 'סיסמה לפחות 4 תווים',\r\n    year :'בחר שנת לימודים',\r\n    email :  'אנא הכנס כתובת אימייל',\r\n    gender : 'בחר מין',\r\n    first_name: 'הכנס שם פרטי תקין',\r\n    last_name: 'הכנס שם משפחה תקין',\r\n    // role : 'בחר האם הינך מורה או תלמיד או שניהם'\r\n}\r\n\r\nexport function validateForm(errors)  {\r\n    let valid = true;\r\n    Object.values(errors).forEach(val=>\r\n         // if we have an error string set valid to false, will be true if val is not null\r\n        val && (valid = false)\r\n             \r\n    );\r\n    return valid;\r\n}\r\n\r\nexport function check_and_assign_errors(name, value, temp_errors) {\r\n    switch(name) {\r\n        case 'email':\r\n            !validEmailRegex.test(value) ? temp_errors.email = errors_messages.email : temp_errors.email = null;\r\n            break;\r\n        case 'id_number':\r\n            (value.length != 9 || !onlyNumbers.test(value)) ?  temp_errors.id_number = errors_messages.id_number : temp_errors.id_number = null\r\n            break;\r\n        case 'password':\r\n                (value.length < 4) ? temp_errors.password = errors_messages.password : temp_errors.password = null\r\n                break;\r\n        case 'year':\r\n                (!value) ?  temp_errors.year = errors_messages.year :  temp_errors.year = null \r\n                break;\r\n        case 'tel_number':\r\n                (value.length != 10 || !onlyNumbers.test(value)) ? temp_errors.tel_number = errors_messages.tel_number :  temp_errors.tel_number = null\r\n                break;\r\n        case 'gender':\r\n                (value != 'male' && value!='female') ? temp_errors.gender = errors_messages.gender :  temp_errors.gender = null\r\n                break;\r\n        case 'first_name':\r\n                (value.length < 2 || !onlyEnglishAndHebrew.test(value)) ? temp_errors.first_name = errors_messages.first_name :temp_errors.first_name = null\r\n                break;\r\n        case 'last_name':\r\n                (value.length < 2 || !onlyEnglishAndHebrew.test(value)) ? temp_errors.last_name = errors_messages.last_name : temp_errors.last_name = null;\r\n                break;\r\n        default:\r\n        break;\r\n    }\r\n    return temp_errors\r\n}\r\n"]},"metadata":{},"sourceType":"module"}