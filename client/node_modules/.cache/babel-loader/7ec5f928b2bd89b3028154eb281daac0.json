{"ast":null,"code":"var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\n\n\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = reference + '';\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;","map":{"version":3,"sources":["C:/Projects/StudyManagement/client/node_modules/lodash/_setWrapToString.js"],"names":["getWrapDetails","require","insertWrapDetails","setToString","updateWrapDetails","setWrapToString","wrapper","reference","bitmask","source","module","exports"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,sBAAD,CAD/B;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAFzB;AAAA,IAGIG,iBAAiB,GAAGH,OAAO,CAAC,sBAAD,CAH/B;AAKA;;;;;;;;;;;;AAUA,SAASI,eAAT,CAAyBC,OAAzB,EAAkCC,SAAlC,EAA6CC,OAA7C,EAAsD;AACpD,MAAIC,MAAM,GAAIF,SAAS,GAAG,EAA1B;AACA,SAAOJ,WAAW,CAACG,OAAD,EAAUJ,iBAAiB,CAACO,MAAD,EAASL,iBAAiB,CAACJ,cAAc,CAACS,MAAD,CAAf,EAAyBD,OAAzB,CAA1B,CAA3B,CAAlB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBN,eAAjB","sourcesContent":["var getWrapDetails = require('./_getWrapDetails'),\r\n    insertWrapDetails = require('./_insertWrapDetails'),\r\n    setToString = require('./_setToString'),\r\n    updateWrapDetails = require('./_updateWrapDetails');\r\n\r\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\r\nfunction setWrapToString(wrapper, reference, bitmask) {\r\n  var source = (reference + '');\r\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\r\n}\r\n\r\nmodule.exports = setWrapToString;\r\n"]},"metadata":{},"sourceType":"script"}