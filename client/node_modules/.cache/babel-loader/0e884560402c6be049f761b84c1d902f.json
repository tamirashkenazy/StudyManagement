{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PopperJS from 'popper.js';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\n/**\r\n * Built on top of `Popper.js`, the overlay component is\r\n * great for custom tooltip overlays.\r\n */\n\nvar Overlay = React.forwardRef(function (props, outerRef) {\n  var flip = props.flip,\n      placement = props.placement,\n      containerPadding = props.containerPadding,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition;\n\n  var _useCallbackRef = useCallbackRef(),\n      rootElement = _useCallbackRef[0],\n      attachRef = _useCallbackRef[1];\n\n  var _useCallbackRef2 = useCallbackRef(),\n      arrowElement = _useCallbackRef2[0],\n      attachArrowRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var _popperConfig$modifie = popperConfig.modifiers,\n      modifiers = _popperConfig$modifie === void 0 ? {} : _popperConfig$modifie;\n\n  var _usePopper = usePopper(target, rootElement, _extends({}, popperConfig, {\n    placement: placement || 'bottom',\n    enableEvents: props.show,\n    modifiers: _extends({}, modifiers, {\n      preventOverflow: _extends({\n        padding: containerPadding || 5\n      }, modifiers.preventOverflow),\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        element: arrowElement\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.preventOverflow)\n    })\n  })),\n      styles = _usePopper.styles,\n      arrowStyles = _usePopper.arrowStyles,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"arrowStyles\"]);\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var child = props.children(_extends({}, popper, {\n    show: props.show,\n    props: {\n      style: styles,\n      ref: mergedRef\n    },\n    arrowProps: {\n      style: arrowStyles,\n      ref: attachArrowRef\n    }\n  }));\n\n  if (Transition) {\n    var onExit = props.onExit,\n        onExiting = props.onExiting,\n        onEnter = props.onEnter,\n        onEntering = props.onEntering,\n        onEntered = props.onEntered;\n    child = React.createElement(Transition, {\n      \"in\": props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, child);\n  }\n\n  return container ? ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nOverlay.propTypes = {\n  /**\r\n   * Set the visibility of the Overlay\r\n   */\n  show: PropTypes.bool,\n\n  /** Specify where the overlay element is positioned in relation to the target element */\n  placement: PropTypes.oneOf(PopperJS.placements),\n\n  /**\r\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\r\n   * the overlay is positioned relative to.\r\n   */\n  target: PropTypes.any,\n\n  /**\r\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\r\n   * appended to it.\r\n   */\n  container: PropTypes.any,\n\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\n  flip: PropTypes.bool,\n\n  /**\r\n   * A render prop that returns an element to overlay and position. See\r\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\r\n   * Control how much space there is between the edge of the boundary element and overlay.\r\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\r\n   */\n  containerPadding: PropTypes.number,\n\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\n  popperConfig: PropTypes.object,\n\n  /**\r\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\r\n   */\n  rootClose: PropTypes.bool,\n\n  /**\r\n   * Specify event for toggling overlay\r\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\r\n   * Specify disabled for disable RootCloseWrapper\r\n   */\n  rootCloseDisabled: PropTypes.bool,\n\n  /**\r\n   * A Callback fired by the Overlay when it wishes to be hidden.\r\n   *\r\n   * __required__ when `rootClose` is `true`.\r\n   *\r\n   * @type func\r\n   */\n  onHide: function onHide(props) {\n    var propType = PropTypes.func;\n\n    if (props.rootClose) {\n      propType = propType.isRequired;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props].concat(args));\n  },\n\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component\r\n   * used to animate the overlay as it changes visibility.\r\n   */\n  transition: PropTypes.elementType,\n\n  /**\r\n   * Callback fired before the Overlay transitions in\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Overlay begins to transition in\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Overlay finishes transitioning in\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired right before the Overlay transitions out\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Overlay begins to transition out\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Overlay finishes transitioning out\r\n   */\n  onExited: PropTypes.func\n};\nOverlay.defaultProps = {\n  containerPadding: 5\n};\nexport default Overlay;","map":{"version":3,"sources":["C:/Projects/StudyManagement/client/node_modules/react-overlays/esm/Overlay.js"],"names":["_extends","_objectWithoutPropertiesLoose","PopperJS","PropTypes","React","useState","ReactDOM","useCallbackRef","useMergedRefs","usePopper","useRootClose","useWaitForDOMRef","Overlay","forwardRef","props","outerRef","flip","placement","containerPadding","_props$popperConfig","popperConfig","Transition","transition","_useCallbackRef","rootElement","attachRef","_useCallbackRef2","arrowElement","attachArrowRef","mergedRef","container","target","_useState","show","exited","setExited","_popperConfig$modifie","modifiers","_usePopper","enableEvents","preventOverflow","padding","arrow","enabled","element","styles","arrowStyles","popper","handleHidden","onExited","apply","arguments","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","child","children","style","ref","arrowProps","onExit","onExiting","onEnter","onEntering","onEntered","createElement","appear","createPortal","displayName","propTypes","bool","oneOf","placements","any","func","isRequired","number","object","propType","_len","length","args","Array","_key","concat","elementType","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport PopperJS from 'popper.js';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport usePopper from './usePopper';\r\nimport useRootClose from './useRootClose';\r\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\r\n/**\r\n * Built on top of `Popper.js`, the overlay component is\r\n * great for custom tooltip overlays.\r\n */\r\n\r\nvar Overlay = React.forwardRef(function (props, outerRef) {\r\n  var flip = props.flip,\r\n      placement = props.placement,\r\n      containerPadding = props.containerPadding,\r\n      _props$popperConfig = props.popperConfig,\r\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\r\n      Transition = props.transition;\r\n\r\n  var _useCallbackRef = useCallbackRef(),\r\n      rootElement = _useCallbackRef[0],\r\n      attachRef = _useCallbackRef[1];\r\n\r\n  var _useCallbackRef2 = useCallbackRef(),\r\n      arrowElement = _useCallbackRef2[0],\r\n      attachArrowRef = _useCallbackRef2[1];\r\n\r\n  var mergedRef = useMergedRefs(attachRef, outerRef);\r\n  var container = useWaitForDOMRef(props.container);\r\n  var target = useWaitForDOMRef(props.target);\r\n\r\n  var _useState = useState(!props.show),\r\n      exited = _useState[0],\r\n      setExited = _useState[1];\r\n\r\n  var _popperConfig$modifie = popperConfig.modifiers,\r\n      modifiers = _popperConfig$modifie === void 0 ? {} : _popperConfig$modifie;\r\n\r\n  var _usePopper = usePopper(target, rootElement, _extends({}, popperConfig, {\r\n    placement: placement || 'bottom',\r\n    enableEvents: props.show,\r\n    modifiers: _extends({}, modifiers, {\r\n      preventOverflow: _extends({\r\n        padding: containerPadding || 5\r\n      }, modifiers.preventOverflow),\r\n      arrow: _extends({}, modifiers.arrow, {\r\n        enabled: !!arrowElement,\r\n        element: arrowElement\r\n      }),\r\n      flip: _extends({\r\n        enabled: !!flip\r\n      }, modifiers.preventOverflow)\r\n    })\r\n  })),\r\n      styles = _usePopper.styles,\r\n      arrowStyles = _usePopper.arrowStyles,\r\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"arrowStyles\"]);\r\n\r\n  if (props.show) {\r\n    if (exited) setExited(false);\r\n  } else if (!props.transition && !exited) {\r\n    setExited(true);\r\n  }\r\n\r\n  var handleHidden = function handleHidden() {\r\n    setExited(true);\r\n\r\n    if (props.onExited) {\r\n      props.onExited.apply(props, arguments);\r\n    }\r\n  }; // Don't un-render the overlay while it's transitioning out.\r\n\r\n\r\n  var mountOverlay = props.show || Transition && !exited;\r\n  useRootClose(rootElement, props.onHide, {\r\n    disabled: !props.rootClose || props.rootCloseDisabled,\r\n    clickTrigger: props.rootCloseEvent\r\n  });\r\n\r\n  if (!mountOverlay) {\r\n    // Don't bother showing anything if we don't have to.\r\n    return null;\r\n  }\r\n\r\n  var child = props.children(_extends({}, popper, {\r\n    show: props.show,\r\n    props: {\r\n      style: styles,\r\n      ref: mergedRef\r\n    },\r\n    arrowProps: {\r\n      style: arrowStyles,\r\n      ref: attachArrowRef\r\n    }\r\n  }));\r\n\r\n  if (Transition) {\r\n    var onExit = props.onExit,\r\n        onExiting = props.onExiting,\r\n        onEnter = props.onEnter,\r\n        onEntering = props.onEntering,\r\n        onEntered = props.onEntered;\r\n    child = React.createElement(Transition, {\r\n      \"in\": props.show,\r\n      appear: true,\r\n      onExit: onExit,\r\n      onExiting: onExiting,\r\n      onExited: handleHidden,\r\n      onEnter: onEnter,\r\n      onEntering: onEntering,\r\n      onEntered: onEntered\r\n    }, child);\r\n  }\r\n\r\n  return container ? ReactDOM.createPortal(child, container) : null;\r\n});\r\nOverlay.displayName = 'Overlay';\r\nOverlay.propTypes = {\r\n  /**\r\n   * Set the visibility of the Overlay\r\n   */\r\n  show: PropTypes.bool,\r\n\r\n  /** Specify where the overlay element is positioned in relation to the target element */\r\n  placement: PropTypes.oneOf(PopperJS.placements),\r\n\r\n  /**\r\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\r\n   * the overlay is positioned relative to.\r\n   */\r\n  target: PropTypes.any,\r\n\r\n  /**\r\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\r\n   * appended to it.\r\n   */\r\n  container: PropTypes.any,\r\n\r\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\r\n  flip: PropTypes.bool,\r\n\r\n  /**\r\n   * A render prop that returns an element to overlay and position. See\r\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\r\n  children: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Control how much space there is between the edge of the boundary element and overlay.\r\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\r\n   */\r\n  containerPadding: PropTypes.number,\r\n\r\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\r\n  popperConfig: PropTypes.object,\r\n\r\n  /**\r\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\r\n   */\r\n  rootClose: PropTypes.bool,\r\n\r\n  /**\r\n   * Specify event for toggling overlay\r\n   */\r\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\r\n\r\n  /**\r\n   * Specify disabled for disable RootCloseWrapper\r\n   */\r\n  rootCloseDisabled: PropTypes.bool,\r\n\r\n  /**\r\n   * A Callback fired by the Overlay when it wishes to be hidden.\r\n   *\r\n   * __required__ when `rootClose` is `true`.\r\n   *\r\n   * @type func\r\n   */\r\n  onHide: function onHide(props) {\r\n    var propType = PropTypes.func;\r\n\r\n    if (props.rootClose) {\r\n      propType = propType.isRequired;\r\n    }\r\n\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    return propType.apply(void 0, [props].concat(args));\r\n  },\r\n\r\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component\r\n   * used to animate the overlay as it changes visibility.\r\n   */\r\n  transition: PropTypes.elementType,\r\n\r\n  /**\r\n   * Callback fired before the Overlay transitions in\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition in\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning in\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired right before the Overlay transitions out\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition out\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning out\r\n   */\r\n  onExited: PropTypes.func\r\n};\r\nOverlay.defaultProps = {\r\n  containerPadding: 5\r\n};\r\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}