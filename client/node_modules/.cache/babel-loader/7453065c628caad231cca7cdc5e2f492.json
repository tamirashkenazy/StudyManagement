{"ast":null,"code":"var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n/**\r\n * Creates an object composed of the `object` properties `predicate` returns\r\n * truthy for. The predicate is invoked with two arguments: (value, key).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {Function} [predicate=_.identity] The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.pickBy(object, _.isNumber);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\n\n\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n\n  var props = arrayMap(getAllKeysIn(object), function (prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function (value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;","map":{"version":3,"sources":["C:/Projects/StudyManagement/client/node_modules/lodash/pickBy.js"],"names":["arrayMap","require","baseIteratee","basePickBy","getAllKeysIn","pickBy","object","predicate","props","prop","value","path","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAD1B;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,eAAD,CAFxB;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAH1B;AAKA;;;;;;;;;;;;;;;;;;;;AAkBA,SAASI,MAAT,CAAgBC,MAAhB,EAAwBC,SAAxB,EAAmC;AACjC,MAAID,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAO,EAAP;AACD;;AACD,MAAIE,KAAK,GAAGR,QAAQ,CAACI,YAAY,CAACE,MAAD,CAAb,EAAuB,UAASG,IAAT,EAAe;AACxD,WAAO,CAACA,IAAD,CAAP;AACD,GAFmB,CAApB;AAGAF,EAAAA,SAAS,GAAGL,YAAY,CAACK,SAAD,CAAxB;AACA,SAAOJ,UAAU,CAACG,MAAD,EAASE,KAAT,EAAgB,UAASE,KAAT,EAAgBC,IAAhB,EAAsB;AACrD,WAAOJ,SAAS,CAACG,KAAD,EAAQC,IAAI,CAAC,CAAD,CAAZ,CAAhB;AACD,GAFgB,CAAjB;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,MAAjB","sourcesContent":["var arrayMap = require('./_arrayMap'),\r\n    baseIteratee = require('./_baseIteratee'),\r\n    basePickBy = require('./_basePickBy'),\r\n    getAllKeysIn = require('./_getAllKeysIn');\r\n\r\n/**\r\n * Creates an object composed of the `object` properties `predicate` returns\r\n * truthy for. The predicate is invoked with two arguments: (value, key).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {Function} [predicate=_.identity] The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.pickBy(object, _.isNumber);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\r\nfunction pickBy(object, predicate) {\r\n  if (object == null) {\r\n    return {};\r\n  }\r\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\r\n    return [prop];\r\n  });\r\n  predicate = baseIteratee(predicate);\r\n  return basePickBy(object, props, function(value, path) {\r\n    return predicate(value, path[0]);\r\n  });\r\n}\r\n\r\nmodule.exports = pickBy;\r\n"]},"metadata":{},"sourceType":"script"}