{"ast":null,"code":"import React from 'react';\nexport const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\nexport function validateForm(errors) {\n  let valid = true;\n  Object.values(errors).forEach(val => // if we have an error string set valid to false, will be true if val is not null\n  val && (valid = false));\n  return valid;\n}\nexport function check_and_assign_errors(name, value) {\n  let temp_errors = {\n    email: null,\n    id_number: null\n  };\n  let is_form_valid = true;\n\n  switch (name) {\n    case 'email':\n      if (!validEmailRegex.test(value)) {\n        is_form_valid = false;\n        temp_errors.email = 'אנא הכנס כתובת אימייל';\n        console.log(value);\n      } else {\n        temp_errors.email = null;\n      }\n\n    case 'id_number':\n      if (value.length != 9 || !onlyNumbers.test(value)) {\n        is_form_valid = false;\n        temp_errors.id_number = 'הכנס 9 מספרים של ת.ז';\n        console.log(value);\n      } else {\n        temp_errors.id_number = null;\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return [is_form_valid, temp_errors];\n}","map":{"version":3,"sources":["D:/Tamir/Uni/3rd year/Project/StudyManagementProject/study-management-app/client/src/components/signup/validationFields.js"],"names":["React","validEmailRegex","RegExp","onlyNumbers","validateForm","errors","valid","Object","values","forEach","val","check_and_assign_errors","name","value","temp_errors","email","id_number","is_form_valid","test","console","log","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGC,MAAM,CAAC,4GAAD,CAA9B;AACP,OAAO,MAAMC,WAAW,GAAGD,MAAM,CAAC,YAAD,CAA1B;AAEP,OAAO,SAASE,YAAT,CAAsBC,MAAtB,EAA+B;AAClC,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,OAAtB,CAA8BC,GAAG,IAC5B;AACDA,EAAAA,GAAG,KAAKJ,KAAK,GAAG,KAAb,CAFP;AAKA,SAAOA,KAAP;AACH;AAED,OAAO,SAASK,uBAAT,CAAiCC,IAAjC,EAAuCC,KAAvC,EAA8C;AACjD,MAAIC,WAAW,GAAG;AACdC,IAAAA,KAAK,EAAC,IADQ;AAEdC,IAAAA,SAAS,EAAG;AAFE,GAAlB;AAIA,MAAIC,aAAa,GAAG,IAApB;;AACA,UAAOL,IAAP;AACI,SAAK,OAAL;AACI,UAAI,CAACX,eAAe,CAACiB,IAAhB,CAAqBL,KAArB,CAAL,EAAkC;AAC9BI,QAAAA,aAAa,GAAG,KAAhB;AACAH,QAAAA,WAAW,CAACC,KAAZ,GAAoB,uBAApB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,OAJD,MAIO;AACHC,QAAAA,WAAW,CAACC,KAAZ,GAAoB,IAApB;AACH;;AACL,SAAK,WAAL;AACI,UAAGF,KAAK,CAACQ,MAAN,IAAgB,CAAhB,IAAqB,CAAClB,WAAW,CAACe,IAAZ,CAAiBL,KAAjB,CAAzB,EAAkD;AAC9CI,QAAAA,aAAa,GAAG,KAAhB;AACAH,QAAAA,WAAW,CAACE,SAAZ,GAAwB,sBAAxB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,OAJD,MAIM;AACFC,QAAAA,WAAW,CAACE,SAAZ,GAAwB,IAAxB;AACH;;AACL;;AACA;AACA;AAnBJ;;AAqBA,SAAO,CAACC,aAAD,EAAgBH,WAAhB,CAAP;AACH","sourcesContent":["import React from 'react';\r\n\r\nexport const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\r\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\r\n\r\nexport function validateForm(errors)  {\r\n    let valid = true;\r\n    Object.values(errors).forEach(val=>\r\n         // if we have an error string set valid to false, will be true if val is not null\r\n        val && (valid = false)\r\n             \r\n    );\r\n    return valid;\r\n}\r\n\r\nexport function check_and_assign_errors(name, value) {\r\n    let temp_errors = {\r\n        email:null,\r\n        id_number : null\r\n    }\r\n    let is_form_valid = true\r\n    switch(name) {\r\n        case 'email':\r\n            if (!validEmailRegex.test(value)) {\r\n                is_form_valid = false;\r\n                temp_errors.email = 'אנא הכנס כתובת אימייל';\r\n                console.log(value);\r\n            } else {\r\n                temp_errors.email = null;\r\n            }\r\n        case 'id_number':\r\n            if(value.length != 9 || !onlyNumbers.test(value)) {\r\n                is_form_valid = false;\r\n                temp_errors.id_number = 'הכנס 9 מספרים של ת.ז';\r\n                console.log(value);\r\n            }else {\r\n                temp_errors.id_number = null;\r\n            }\r\n        break;\r\n        default:\r\n        break;\r\n    }\r\n    return [is_form_valid, temp_errors]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}