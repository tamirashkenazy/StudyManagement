{"ast":null,"code":"export const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\nexport const onlyEnglishAndHebrew = RegExp(/^[A-Za-z\\u0590-\\u05fe]+$/i);\nexport const error_default_messages = {\n  id_number: 'הכנס 9 מספרים של ת.ז',\n  tel_number: 'מספר טלפון מורכב מ10 תווים',\n  password: 'סיסמה לפחות 4 תווים',\n  year: 'בחר שנת לימודים',\n  email: 'אנא הכנס כתובת אימייל',\n  gender: 'בחר מין',\n  first_name: 'הכנס שם פרטי תקין',\n  last_name: 'הכנס שם משפחה תקין',\n  role: 'בחר האם הינך מורה או תלמיד או שניהם' // role : 'בחר האם הינך מורה או תלמיד או שניהם'\n\n};\nexport function validateForm(errors) {\n  let valid = true;\n  Object.values(errors).forEach(error => // if we have an error string set valid to false, will be true if val is not null\n  error && (valid = false));\n  return valid;\n}\nexport function check_and_assign_errors(name, value, temp_errors) {\n  console.log(temp_errors);\n\n  switch (name) {\n    case 'email':\n      !validEmailRegex.test(value) ? temp_errors.email_error = error_default_messages.email_error : temp_errors.email_error = null;\n      break;\n\n    case 'id_number':\n      value.length !== 9 || !onlyNumbers.test(value) ? temp_errors.id_number_error = error_default_messages.id_number_error : temp_errors.id_number_error = null;\n      break;\n\n    case 'password':\n      value.length < 4 ? temp_errors.password_error = error_default_messages.password_error : temp_errors.password_error = null;\n      break;\n\n    case 'year':\n      !value ? temp_errors.year_error = error_default_messages.year_error : temp_errors.year_error = null;\n      break;\n\n    case 'tel_number':\n      value.length !== 10 || !onlyNumbers.test(value) ? temp_errors.tel_number_error = error_default_messages.tel_number_error : temp_errors.tel_number_error = null;\n      break;\n\n    case 'gender':\n      value !== 'male' && value !== 'female' ? temp_errors.gender_error = error_default_messages.gender_error : temp_errors.gender_error = null;\n      break;\n\n    case 'first_name':\n      value.length < 2 || !onlyEnglishAndHebrew.test(value) ? temp_errors.first_name_error = error_default_messages.first_name_error : temp_errors.first_name_error = null;\n      break;\n\n    case 'last_name':\n      value.length < 2 || !onlyEnglishAndHebrew.test(value) ? temp_errors.last_name_error = error_default_messages.last_name_error : temp_errors.last_name_error = null;\n      break;\n\n    default:\n      break;\n  }\n\n  return temp_errors;\n}","map":{"version":3,"sources":["C:/Projects/StudyManagement/client/src/components/signup/validationFields.js"],"names":["validEmailRegex","RegExp","onlyNumbers","onlyEnglishAndHebrew","error_default_messages","id_number","tel_number","password","year","email","gender","first_name","last_name","role","validateForm","errors","valid","Object","values","forEach","error","check_and_assign_errors","name","value","temp_errors","console","log","test","email_error","length","id_number_error","password_error","year_error","tel_number_error","gender_error","first_name_error","last_name_error"],"mappings":"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","sourcesContent":["export const validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\r\nexport const onlyNumbers = RegExp(/^[0-9\\b]+$/);\r\nexport const onlyEnglishAndHebrew = RegExp(/^[A-Za-z\\u0590-\\u05fe]+$/i)\r\nexport const error_default_messages = {\r\n    id_number: 'הכנס 9 מספרים של ת.ז',\r\n    tel_number:  'מספר טלפון מורכב מ10 תווים',\r\n    password: 'סיסמה לפחות 4 תווים',\r\n    year :'בחר שנת לימודים',\r\n    email :  'אנא הכנס כתובת אימייל',\r\n    gender : 'בחר מין',\r\n    first_name: 'הכנס שם פרטי תקין',\r\n    last_name: 'הכנס שם משפחה תקין',\r\n    role : 'בחר האם הינך מורה או תלמיד או שניהם'\r\n    // role : 'בחר האם הינך מורה או תלמיד או שניהם'\r\n}\r\n\r\nexport function validateForm(errors)  {\r\n    let valid = true;\r\n    Object.values(errors).forEach(error=>\r\n         // if we have an error string set valid to false, will be true if val is not null\r\n         error && (valid = false)\r\n             \r\n    );\r\n    return valid;\r\n}\r\n\r\nexport function check_and_assign_errors(name, value, temp_errors) {\r\n    console.log(temp_errors);\r\n    switch(name) {\r\n        case 'email':\r\n            !validEmailRegex.test(value) ? temp_errors.email_error = error_default_messages.email_error : temp_errors.email_error = null;\r\n            break;\r\n        case 'id_number':\r\n            (value.length !== 9 || !onlyNumbers.test(value)) ?  temp_errors.id_number_error = error_default_messages.id_number_error : temp_errors.id_number_error = null\r\n            break;\r\n        case 'password':\r\n                (value.length < 4) ? temp_errors.password_error = error_default_messages.password_error : temp_errors.password_error = null\r\n                break;\r\n        case 'year':\r\n                (!value) ?  temp_errors.year_error = error_default_messages.year_error :  temp_errors.year_error = null \r\n                break;\r\n        case 'tel_number':\r\n                (value.length !== 10 || !onlyNumbers.test(value)) ? temp_errors.tel_number_error = error_default_messages.tel_number_error :  temp_errors.tel_number_error = null\r\n                break;\r\n        case 'gender':\r\n                (value !== 'male' && value!=='female') ? temp_errors.gender_error = error_default_messages.gender_error :  temp_errors.gender_error = null\r\n                break;\r\n        case 'first_name':\r\n                (value.length < 2 || !onlyEnglishAndHebrew.test(value)) ? temp_errors.first_name_error = error_default_messages.first_name_error :temp_errors.first_name_error = null\r\n                break;\r\n        case 'last_name':\r\n                (value.length < 2 || !onlyEnglishAndHebrew.test(value)) ? temp_errors.last_name_error = error_default_messages.last_name_error : temp_errors.last_name_error = null;\r\n                break;\r\n        default:\r\n        break;\r\n    }\r\n    return temp_errors\r\n}\r\n"]},"metadata":{},"sourceType":"module"}